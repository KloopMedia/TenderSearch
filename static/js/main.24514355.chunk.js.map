{"version":3,"sources":["Components/InstantSearch/HitHighlitght.js","Components/InstantSearch/InstantSearch.js","Components/InstantSearch/Hit.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","section","borderRadius","elevation","backgroundColor","container","display","flexDirection","CustomHighlight","connectHighlight","parsedHit","highlight","highlightProperty","attribute","hit","map","part","index","isHighlighted","value","Hit","keys","Object","style","margin","textAlign","borderCollapse","width","border","summary","scope","key","padding","className","IndexName","link","fontFamily","fontWeight","fontSize","textTransform","preStyle","overflow","searchClient","algoliasearch","initIndex","gridTemplateColumns","header","MyInstantSearch","classes","InstantSearch","indexName","RefinementList","SearchBox","Hits","hitComponent","HitHighlight","Pagination","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24514355.chunk.js","sourcesContent":["import {connectHighlight} from 'react-instantsearch-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n\nconst useStyles = makeStyles((theme) => ({\n\tsection: {\n\t\tborderRadius: 10,\n\t\televation: 30,\n\t\tbackgroundColor: \"#fafafa\"\n\t},\n\tcontainer: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\"\n\n\t}\n}));\n\nconst Highlight = ({highlight, attribute, hit}) => {\n\tconst parsedHit = highlight({\n\t\thighlightProperty: '_highlightResult',\n\t\tattribute,\n\t\thit,\n\t});\n\n\n\treturn (\n\t\t<span>\n\t\t\t{parsedHit.map(\n\t\t\t\t(part, index) =>\n\t\t\t\t\tpart.isHighlighted ? (\n\t\t\t\t\t\t<mark key={index}>{part.value}</mark>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span key={index}>{part.value}</span>\n\t\t\t\t\t)\n\t\t\t)}\n    </span>\n\t);\n};\n\nconst CustomHighlight = connectHighlight(Highlight);\n\nconst Hit = ({hit}) => {\n\tconst classes = useStyles();\n\tconst keys = Object.keys(hit);\n\treturn (\n\t\t<div style={{margin: 10, textAlign: \"start\"}}>\n\t\t\t\t{/*<table  style=\"key-value-table  ux-light-table\" summary=\"Example of a key value table.\">*/}\n\t\t\t\t<table style={{borderCollapse: \"collapse\", width:\"100%\", border: \"1px solid black\"}} summary=\"Example of a key value table.\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\">Key</th>\n\t\t\t\t\t\t<th scope=\"col\">Value</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t{\n\t\t\t\t\t\tkeys.map(key => {\n\t\t\t\t\t\t\treturn (\n\n\t\t\t\t\t\t\t\t<tr style={{border: \"1px solid black\"}}>\n\t\t\t\t\t\t\t\t\t<th style={{padding: 5,border: \"1px solid black\"}} className=\"width-20\">{key}</th>\n\t\t\t\t\t\t\t\t\t<td  scope=\"row\" ><CustomHighlight hit={hit} attribute={key}/></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t</div>\n\t)\n};\n\nexport default Hit;","import {\n\tInstantSearch,\n\tHits,\n\tSearchBox,\n\tPagination,\n\tHighlight,\n\tClearRefinements,\n\tRefinementList,\n\tConfigure,\n} from 'react-instantsearch-dom';\nimport algoliasearch from 'algoliasearch';\nimport HitHighlight from \"./HitHighlitght.js\";\nimport Hit from \"./Hit\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst IndexName = \"TenderBot\";\n\nconst searchClient = algoliasearch('9QKFJFKAX7', '8324e01a7fe5219482d1dbb65159ab74');\nconst index = searchClient.initIndex(IndexName);\n\n\nconst useStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tdisplay: \"grid\",\n\t\tmargin: \"0 auto\",\n\t\twidth: \"90%\",\n\t\tgridTemplateColumns: \"1fr 1fr\",\n\n\t\ttextAlign: \"left\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tgridTemplateColumns: \"1fr\",\n\t\t},\n\t},\n\theader: {\n\t\tmargin: 0,\n\t\tpadding: 0,\n\t\tfontFamily: \"Roboto\",\n\t\tfontWeight: 700,\n\t\tfontSize: 24,\n\t\ttextTransform: \"uppercase\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tfontSize: 22\n\t\t},\n\t\t['@media (max-width:500px)']: {\n\t\t\tfontSize: 20\n\t\t},\n\t\t['@media (max-width:350px)']: {\n\t\t\tfontSize: 19\n\t\t}\n\t}\n}));\nconst MyInstantSearch = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<InstantSearch searchClient={searchClient} indexName={IndexName}>\n\t\t\t<div className={classes.container}>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className={classes.header}>Procurement Format</h2>\n\t\t\t\t\t<RefinementList attribute=\"procurement_format\"/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className={classes.header}>Procurement Method</h2>\n\t\t\t\t\t<RefinementList attribute=\"procurement_method\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SearchBox/>\n\t\t\t<Hits hitComponent={HitHighlight} />\n\t\t\t{/*<Hits hitComponent={Hit} />*/}\n\t\t\t\t<Pagination/>\n\t\t</InstantSearch>\n\t);\n}\n\nexport default MyInstantSearch;","import {makeStyles} from \"@material-ui/core\";\nimport ReactJsonPrint from 'react-json-print'\nimport {Hits, Highlight, CustomHighlight} from 'react-instantsearch-dom';\nimport HitHighlitght from \"./HitHighlitght\";\nimport HitHighlight from \"./HitHighlitght\";\n\nconst useStyles = makeStyles((theme) => ({\n\tlink: {\n\t\tmargin: 0,\n\t\tpadding: \"15px 0 5px 0 \",\n\t\tfontFamily: \"Roboto\",\n\t\tfontWeight: 300,\n\t\tfontSize: 20,\n\t\ttextTransform: \"uppercase\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tfontSize: 18\n\t\t},\n\t\t['@media (max-width:500px)']: {\n\t\t\tfontSize: 16\n\t\t},\n\t\t['@media (max-width:350px)']: {\n\t\t\tfontSize: 15\n\t\t}\n\t},\n\tpreStyle: {\n\t\tdisplay: 'block',\n\t\tmargin: '0',\n\t\toverflow: 'scroll',\n\t},\n}));\n\n\nconst Hit = (props) => {\n\tconst classes = useStyles()\n\tconst hit = props.hit\n\tconsole.log(hit)\n\n\n\treturn (\n\t\t<div style={{paddingTop: 50, textAlign: \"left\"}}>\n\t\t\t<ReactJsonPrint dataObject={hit}/>\n\n\t\t</div>\n\t);\n}\n\nexport default Hit;","import './App.css';\nimport MyInstantSearch from \"./Components/InstantSearch/InstantSearch.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MyInstantSearch/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}