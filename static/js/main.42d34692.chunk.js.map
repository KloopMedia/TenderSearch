{"version":3,"sources":["Components/InstantSearch/Hit.js","Components/InstantSearch/InstantSearch.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","link","margin","padding","fontFamily","fontWeight","fontSize","textTransform","preStyle","display","overflow","Hit","props","require","item","hit","console","log","style","paddingTop","textAlign","dataObject","IndexName","searchClient","algoliasearch","initIndex","container","width","gridTemplateColumns","header","MyInstantSearch","classes","InstantSearch","indexName","className","RefinementList","attribute","SearchBox","Hits","hitComponent","Pagination","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACxCC,MAAI,GACHC,OAAQ,EACRC,QAAS,gBACTC,WAAY,SACZC,WAAY,IACZC,SAAU,GACVC,cAAe,aANZ,cAOF,2BAA6B,CAC7BD,SAAU,KARR,cAUF,2BAA6B,CAC7BA,SAAU,KAXR,cAaF,2BAA6B,CAC7BA,SAAU,KAdR,GAiBJE,SAAU,CACTC,QAAS,QACTP,OAAQ,IACRQ,SAAU,cAkBGC,EAbH,SAACC,GACId,IACMe,EAAQ,IAD9B,IAEIC,EAAOF,EAAMG,IAGjB,OAFAC,QAAQC,IAAIH,GAGX,qBAAKI,MAAO,CAACC,WAAY,GAAIC,UAAW,QAAxC,SACC,cAAC,IAAD,CAAgBC,WAAYP,OCvBzBQ,EAAY,YAEZC,EAAeC,IAAc,aAAc,oCAI3C1B,GAHQyB,EAAaE,UAAUH,GAGnBvB,aAAW,SAACC,GAAD,YAAY,CACxC0B,UAAU,aACTjB,QAAS,OACTP,OAAQ,SACRyB,MAAO,MACPC,oBAAqB,UAErBR,UAAW,QACV,2BAA6B,CAC7BQ,oBAAqB,QAGvBC,QAAM,GACL3B,OAAQ,EACRC,QAAS,EACTC,WAAY,SACZC,WAAY,IACZC,SAAU,GACVC,cAAe,aANV,cAOJ,2BAA6B,CAC7BD,SAAU,KARN,cAUJ,2BAA6B,CAC7BA,SAAU,KAXN,cAaJ,2BAA6B,CAC7BA,SAAU,KAdN,QAwCQwB,EAtBS,WACvB,IAAMC,EAAUjC,IAEhB,OACC,eAACkC,EAAA,EAAD,CAAeT,aAAcA,EAAcU,UAAWX,EAAtD,UACC,sBAAKY,UAAWH,EAAQL,UAAxB,UACC,gCACC,oBAAIQ,UAAWH,EAAQF,OAAvB,gCACA,cAACM,EAAA,EAAD,CAAgBC,UAAU,0BAE3B,gCACC,oBAAIF,UAAWH,EAAQF,OAAvB,gCACA,cAACM,EAAA,EAAD,CAAgBC,UAAU,6BAG5B,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,aAAc5B,IACnB,cAAC6B,EAAA,EAAD,QCxDWC,MARf,WACE,OACE,qBAAKP,UAAU,MAAf,SACA,cAAC,EAAD,OCMWQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42d34692.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core\";\nimport ReactJsonPrint from 'react-json-print'\n\nconst useStyles = makeStyles((theme) => ({\n\tlink: {\n\t\tmargin: 0,\n\t\tpadding: \"15px 0 5px 0 \",\n\t\tfontFamily: \"Roboto\",\n\t\tfontWeight: 300,\n\t\tfontSize: 20,\n\t\ttextTransform: \"uppercase\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tfontSize: 18\n\t\t},\n\t\t['@media (max-width:500px)']: {\n\t\t\tfontSize: 16\n\t\t},\n\t\t['@media (max-width:350px)']: {\n\t\t\tfontSize: 15\n\t\t}\n\t},\n\tpreStyle: {\n\t\tdisplay: 'block',\n\t\tmargin: '0',\n\t\toverflow: 'scroll',\n\t},\n}));\n\n\nconst Hit = (props) => {\n\tconst classes = useStyles()\n\tconst JSONPrettyMon = require('react-json-pretty/dist/monikai');\n\tlet item = props.hit\n\tconsole.log(item)\n\n\treturn (\n\t\t<div style={{paddingTop: 50, textAlign: \"left\"}}>\n\t\t\t<ReactJsonPrint dataObject={item}/>\n\t\t</div>\n\t);\n}\n\nexport default Hit;","import {\n\tInstantSearch,\n\tHits,\n\tSearchBox,\n\tPagination,\n\tHighlight,\n\tClearRefinements,\n\tRefinementList,\n\tConfigure,\n} from 'react-instantsearch-dom';\nimport algoliasearch from 'algoliasearch';\nimport Hit from \"./Hit\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst IndexName = \"TenderBot\";\n\nconst searchClient = algoliasearch('9QKFJFKAX7', '8324e01a7fe5219482d1dbb65159ab74');\nconst index = searchClient.initIndex(IndexName);\n\n\nconst useStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tdisplay: \"grid\",\n\t\tmargin: \"0 auto\",\n\t\twidth: \"90%\",\n\t\tgridTemplateColumns: \"1fr 1fr\",\n\n\t\ttextAlign: \"left\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tgridTemplateColumns: \"1fr\",\n\t\t},\n\t},\n\theader: {\n\t\tmargin: 0,\n\t\tpadding: 0,\n\t\tfontFamily: \"Roboto\",\n\t\tfontWeight: 700,\n\t\tfontSize: 24,\n\t\ttextTransform: \"uppercase\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tfontSize: 22\n\t\t},\n\t\t['@media (max-width:500px)']: {\n\t\t\tfontSize: 20\n\t\t},\n\t\t['@media (max-width:350px)']: {\n\t\t\tfontSize: 19\n\t\t}\n\t}\n}));\nconst MyInstantSearch = () => {\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<InstantSearch searchClient={searchClient} indexName={IndexName}>\n\t\t\t<div className={classes.container}>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className={classes.header}>Procurement Format</h2>\n\t\t\t\t\t<RefinementList attribute=\"procurement_format\"/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className={classes.header}>Procurement Method</h2>\n\t\t\t\t\t<RefinementList attribute=\"procurement_method\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SearchBox/>\n\t\t\t<Hits hitComponent={Hit}/>\n\t\t\t\t<Pagination/>\n\t\t</InstantSearch>\n\t);\n}\n\nexport default MyInstantSearch;","import './App.css';\nimport MyInstantSearch from \"./Components/InstantSearch/InstantSearch.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MyInstantSearch/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}